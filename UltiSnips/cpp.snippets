snippet class "class" b
class ${1:Class}{
public:
    // constructors, asssignment, destructor
    $1();
    $1(const $1&);
    $1& operator=(const $1&);
    ~$1();
private:

};
endsnippet

snippet inc "include" b
#include <${1:iostream}>${0}
endsnippet

snippet incl "include" b
#include "${1:math}.h"$0
endsnippet

snippet std "using namespace std" b
using namespace std;${0}
endsnippet

snippet def "define" b
#define ${1:Pi} ${2:3.1415926535}${0}
endsnippet

snippet main "main function" b
int main(int argc, char * argv[])
{
	${0:printf("Hello, world!\n");}
	return 0;
}
endsnippet

snippet { "{}" Ai
{${1}}${0}
endsnippet

snippet [ "[]" Ai
[${1}]${0}
endsnippet

snippet ( "()" Ai
(${1})${0}
endsnippet

snippet < "<>" i
<${1}>${0}
endsnippet

snippet for "for loop"
for(${1:int i = 0}; ${2:i < 1}; ${3: i++})
{	
	${4:printf("Hello, world!\n");}
}$0
endsnippet

snippet if "if"
if(${1:true})
{
	${2:printf("Hello, world!\n");}
}$0
endsnippet

snippet while "while loop"
while(${1:true})
{
	${2:printf("Hello, world!\n");}
}$0
endsnippet

snippet " "quote" Ai
"${1}"${0}
endsnippet

snippet ' "quote" Ai
'${1}'${0}
endsnippet

snippet aut "author" b
//
//  Created by WW on `date +%D`.
//  Copyright Â© WW. All rights reserved.
//${0}
endsnippet

snippet com "comment" 
/*
${VISUAL}	
*/$0
endsnippet

snippet head "ifndef" b
#ifndef _${1:HEAD}_H_
#define _$1_H_

${0}

#endif /* _$1_H_ */
endsnippet

snippet sym "ifndef" b
#ifndef ${1:Symbol}
#define $1 ${2:VALUE}

${0}

#endif /* $1 */
endsnippet



